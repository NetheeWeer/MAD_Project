// Generated by view binder compiler. Do not edit!
package com.example.dashitem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dashitem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button deletebtn;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final Button makebtn;

  @NonNull
  public final Button seecart;

  @NonNull
  public final Toolbar toolbar5;

  @NonNull
  public final Button updatebtn;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button deletebtn,
      @NonNull ImageView imageView2, @NonNull Button makebtn, @NonNull Button seecart,
      @NonNull Toolbar toolbar5, @NonNull Button updatebtn) {
    this.rootView = rootView;
    this.deletebtn = deletebtn;
    this.imageView2 = imageView2;
    this.makebtn = makebtn;
    this.seecart = seecart;
    this.toolbar5 = toolbar5;
    this.updatebtn = updatebtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deletebtn;
      Button deletebtn = ViewBindings.findChildViewById(rootView, id);
      if (deletebtn == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.makebtn;
      Button makebtn = ViewBindings.findChildViewById(rootView, id);
      if (makebtn == null) {
        break missingId;
      }

      id = R.id.seecart;
      Button seecart = ViewBindings.findChildViewById(rootView, id);
      if (seecart == null) {
        break missingId;
      }

      id = R.id.toolbar5;
      Toolbar toolbar5 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar5 == null) {
        break missingId;
      }

      id = R.id.updatebtn;
      Button updatebtn = ViewBindings.findChildViewById(rootView, id);
      if (updatebtn == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, deletebtn, imageView2, makebtn,
          seecart, toolbar5, updatebtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
