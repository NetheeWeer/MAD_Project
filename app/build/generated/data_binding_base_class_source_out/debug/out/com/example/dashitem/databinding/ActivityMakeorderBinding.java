// Generated by view binder compiler. Do not edit!
package com.example.dashitem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dashitem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMakeorderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button additemsbutton;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final EditText itemaddress;

  @NonNull
  public final EditText itemcolor;

  @NonNull
  public final EditText itemname;

  @NonNull
  public final EditText itemquantiy;

  @NonNull
  public final EditText itemsize;

  @NonNull
  public final Toolbar toolbar5;

  private ActivityMakeorderBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button additemsbutton, @NonNull ImageView imageView4, @NonNull EditText itemaddress,
      @NonNull EditText itemcolor, @NonNull EditText itemname, @NonNull EditText itemquantiy,
      @NonNull EditText itemsize, @NonNull Toolbar toolbar5) {
    this.rootView = rootView;
    this.additemsbutton = additemsbutton;
    this.imageView4 = imageView4;
    this.itemaddress = itemaddress;
    this.itemcolor = itemcolor;
    this.itemname = itemname;
    this.itemquantiy = itemquantiy;
    this.itemsize = itemsize;
    this.toolbar5 = toolbar5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMakeorderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMakeorderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_makeorder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMakeorderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.additemsbutton;
      Button additemsbutton = ViewBindings.findChildViewById(rootView, id);
      if (additemsbutton == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.itemaddress;
      EditText itemaddress = ViewBindings.findChildViewById(rootView, id);
      if (itemaddress == null) {
        break missingId;
      }

      id = R.id.itemcolor;
      EditText itemcolor = ViewBindings.findChildViewById(rootView, id);
      if (itemcolor == null) {
        break missingId;
      }

      id = R.id.itemname;
      EditText itemname = ViewBindings.findChildViewById(rootView, id);
      if (itemname == null) {
        break missingId;
      }

      id = R.id.itemquantiy;
      EditText itemquantiy = ViewBindings.findChildViewById(rootView, id);
      if (itemquantiy == null) {
        break missingId;
      }

      id = R.id.itemsize;
      EditText itemsize = ViewBindings.findChildViewById(rootView, id);
      if (itemsize == null) {
        break missingId;
      }

      id = R.id.toolbar5;
      Toolbar toolbar5 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar5 == null) {
        break missingId;
      }

      return new ActivityMakeorderBinding((ConstraintLayout) rootView, additemsbutton, imageView4,
          itemaddress, itemcolor, itemname, itemquantiy, itemsize, toolbar5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
